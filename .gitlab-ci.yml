image: docker-registry.zooz.co:4567/cd/ci-runners/runners:docker-bash-git

stages:
- build
- deploy-dev-crd
- deploy-dev
- deploy-qa-crd
- deploy-qa
- deploy-mars-pci-crd
- deploy-mars-pci
- deploy-mars-apps-crd
- deploy-mars-apps
- deploy-prd-pci-crd
- deploy-prd-pci
- deploy-prd-apps-crd
- deploy-prd-apps
- release

services:
- docker-registry.zooz.co:4567/public-docker-registry/zooz/docker:18.09.6-dind

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
  OPERATOR_NAMESPACE: infra
  REDIS_CLUSTER_NAMESPACE: infra
  ENV: dev
  API_READ_TOKEN: "" # has to be provided via UI
  DASHBOARD_FOLDER_NAME: "Redis-Operator"

# unused, kept for reference
.build-runner-image:
  stage: build
  tags:
  - eks-dev-apps
  script:
  - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  - source scripts/loadEnv.sh
  - 'curl --header "PRIVATE-TOKEN: $API_READ_TOKEN" "https://git.zooz.co/api/v4/projects/363/repository/files/k8s%2Fkubectl-helm%2FDockerfile?ref=master" | jq ".content" -r | base64 -d > runner.Dockerfile'
  - docker build . -f ./runner.Dockerfile -t docker-registry.zooz.co:4567/payu-clan-sre/redis/redis-operator/redis-operator-docker/redis-operator-runner:latest --network=host
  - docker push docker-registry.zooz.co:4567/payu-clan-sre/redis/redis-operator/redis-operator-mirror/redis-operator-runner:latest
  when: manual
  except:
  - tags

build-image:
  stage: build
  tags:
  - eks-dev-apps
  stage: build
  script:
  - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  - source scripts/loadEnv.sh
  # - docker build -t docker-registry.zooz.co:4567/payu-clan-sre/redis/redis-operator/redis-operator-mirror/release:latest --build-arg NAMESPACE=$OPERATOR_NAMESPACE --network=host .
  # - docker push docker-registry.zooz.co:4567/payu-clan-sre/redis/redis-operator/redis-operator-mirror/release:latest
  - |
    docker build \
      --network host \
      --build-arg NAMESPACE=$OPERATOR_NAMESPACE \
      --pull \
      --cache-from $DOCKER_IMAGE \
      --tag $DOCKER_IMAGE .
  - docker push $DOCKER_IMAGE
  when: manual
  except:
  - tags

.deploy-crd: # creates the CRD
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - kubectl apply -f ./helm/crds/crd-rediscluster.yaml
  when: manual

.deploy-operator: # creates all resources except CRD and RedisCluster
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - source scripts/loadEnv.sh
  - timeout -t 30 bash -c "until curl -s --fail localhost:15020/healthz/ready; do sleep 1; done"
  - helm upgrade --install redis-operator ./helm --namespace infra -f values/default.yaml -f values/$ENV.yaml --set global.rbac.create=false --set redisCluster.enabled=false --set redisCluster.namespace=$OPERATOR_NAMESPACE --set redisOperator.containers[0].image=$DOCKER_IMAGE --skip-crds --debug
  when: manual

.deploy-rediscluster: # creates RedisCluster resource
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - timeout -t 30 bash -c "until curl -s --fail localhost:15020/healthz/ready; do sleep 1; done"
  - helm upgrade --install redis-operator-rediscluster ./helm --namespace infra -f values/default.yaml -f values/$ENV.yaml --set global.rbac.create=false --set redisOperator.enabled=false --set redisCluster.namespace=$REDIS_CLUSTER_NAMESPACE --skip-crds --debug
  when: manual

.remove-crd: # removes the CRD
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - kubectl delete crd redisclusters.db.payu.com
  when: manual

.remove-operator: # removes all resources except CRD and RedisCluster
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - timeout -t 30 bash -c "until curl -s --fail localhost:15020/healthz/ready; do sleep 1; done"
  - helm delete redis-operator -n $OPERATOR_NAMESPACE
  when: manual

.remove-rediscluster: # removes RedisCluster resource
  image: docker-registry.zooz.co:4567/cd/ci-runners/runners:helm-3.5.0
  script:
  - timeout -t 30 bash -c "until curl -s --fail localhost:15020/healthz/ready; do sleep 1; done"
  - helm delete redis-operator-rediscluster -n $REDIS_CLUSTER_NAMESPACE
  when: manual

deploy-dev-crd:
  stage: deploy-dev-crd
  extends: .deploy-crd
  tags:
  - eks-dev-kube-system
  except:
  - tags

remove-dev-crd:
  stage: deploy-dev-crd
  extends: .remove-crd
  tags:
  - eks-dev-kube-system
  except:
  - tags

deploy-dev-operator:
  stage: deploy-dev
  extends: .deploy-operator
  tags:
  - eks-dev-infra
  except:
  - tags

remove-dev-operator:
  stage: deploy-dev
  extends: .remove-operator
  tags:
  - eks-dev-infra
  except:
  - tags

deploy-dev-rediscluster:
  stage: deploy-dev
  extends: .deploy-rediscluster
  tags:
  - eks-dev-infra
  except:
  - tags

remove-dev-rediscluster:
  stage: deploy-dev
  extends: .remove-rediscluster
  tags:
  - eks-dev-infra
  except:
  - tags

deploy-qa-crd:
  stage: deploy-qa-crd
  extends: .deploy-crd
  tags:
  - eks-qa-kube-system
  except:
  - tags

remove-qa-crd:
  stage: deploy-qa-crd
  extends: .remove-crd
  tags:
  - eks-qa-kube-system
  except:
  - tags

deploy-qa-operator:
  stage: deploy-qa
  extends: .deploy-operator
  tags:
  - eks-qa-infra
  except:
  - tags
  variables:
    ENV: qa

remove-qa-operator:
  stage: deploy-qa
  extends: .remove-operator
  tags:
  - eks-qa-infra
  except:
  - tags

deploy-qa-rediscluster:
  stage: deploy-qa
  extends: .deploy-rediscluster
  tags:
  - eks-qa-infra
  except:
  - tags
  variables:
    ENV: qa

remove-qa-rediscluster:
  stage: deploy-qa
  extends: .remove-rediscluster
  tags:
  - eks-qa-infra
  except:
  - tags

deploy-mars-pci-crd:
  stage: deploy-mars-pci-crd
  extends: .deploy-crd
  tags:
  - eks-mars-pci-kube-system
  except:
  - tags

remove-mars-pci-crd:
  stage: deploy-mars-pci-crd
  extends: .remove-crd
  tags:
  - eks-mars-pci-kube-system
  except:
  - tags

deploy-mars-pci-operator:
  stage: deploy-mars-pci
  extends: .deploy-operator
  tags:
  - eks-mars-pci-infra
  except:
  - tags
  variables:
    ENV: mars-pci

remove-mars-pci-operator:
  stage: deploy-mars-pci
  extends: .remove-operator
  tags:
  - eks-mars-pci-infra
  except:
  - tags

deploy-mars-pci-rediscluster:
  stage: deploy-mars-pci
  extends: .deploy-rediscluster
  tags:
  - eks-mars-pci-infra
  except:
  - tags
  variables:
    ENV: mars-pci

remove-mars-pci-rediscluster:
  stage: deploy-mars-pci
  extends: .remove-rediscluster
  tags:
  - eks-mars-pci-infra
  except:
  - tags

deploy-mars-apps-crd:
  stage: deploy-mars-apps-crd
  extends: .deploy-crd
  tags:
  - eks-mars-apps-kube-system
  except:
  - tags

remove-mars-apps-crd:
  stage: deploy-mars-apps-crd
  extends: .remove-crd
  tags:
  - eks-mars-apps-kube-system
  except:
  - tags

deploy-mars-apps-operator:
  stage: deploy-mars-apps
  extends: .deploy-operator
  tags:
  - eks-mars-apps-infra
  except:
  - tags
  variables:
    ENV: mars-apps

remove-mars-apps-operator:
  stage: deploy-mars-apps
  extends: .remove-operator
  tags:
  - eks-mars-apps-infra
  except:
  - tags

deploy-mars-apps-rediscluster:
  stage: deploy-mars-apps
  extends: .deploy-rediscluster
  tags:
  - eks-mars-apps-infra
  except:
  - tags
  variables:
    ENV: mars-apps

remove-mars-apps-rediscluster:
  stage: deploy-mars-apps
  extends: .remove-rediscluster
  tags:
  - eks-mars-apps-infra
  except:
  - tags

deploy-prd-pci-crd:
  stage: deploy-prd-pci-crd
  extends: .deploy-crd
  tags:
  - eks-prd-pci-kube-system
  only:
  - tags

deploy-prd-pci-operator:
  stage: deploy-prd-pci
  extends: .deploy-operator
  tags:
  - eks-prd-pci-infra
  variables:
    ENV: prd-pci
  only:
  - tags

remove-prd-pci-operator:
  stage: deploy-prd-pci
  extends: .remove-operator
  tags:
  - eks-prd-pci-infra
  only:
  - tags

deploy-prd-pci-rediscluster:
  stage: deploy-prd-pci
  extends: .deploy-rediscluster
  tags:
  - eks-prd-pci-infra
  variables:
    ENV: prd-pci
  only:
  - tags

deploy-prd-apps-crd:
  stage: deploy-prd-apps-crd
  extends: .deploy-crd
  tags:
  - eks-prd-apps-kube-system
  only:
  - tags

deploy-prd-apps-operator:
  stage: deploy-prd-apps
  extends: .deploy-operator
  tags:
  - eks-prd-apps-infra
  variables:
    ENV: prd-apps
  only:
  - tags

remove-prd-apps-operator:
  stage: deploy-prd-apps
  extends: .remove-operator
  tags:
  - eks-prd-apps-infra
  only:
  - tags

deploy-prd-apps-rediscluster:
  stage: deploy-prd-apps
  extends: .deploy-rediscluster
  tags:
  - eks-prd-apps-infra
  variables:
    ENV: prd-apps
  only:
  - tags

.release: &release
  tags:
  - eks-dev-apps
  stage: release
  script:
  - echo "Setup ssh inside the runner.."
  - git config --global user.email $GITLAB_USER_EMAIL
  - git config --global user.name $GITLAB_USER_LOGIN
  - 'which ssh-agent || ( apk --update add openssh-client )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - echo "Clone the source code.."
  - GIT_URL=$(echo $CI_PROJECT_URL | cut -d'/' -f3)
  - git clone git@$GIT_URL:$CI_PROJECT_PATH.git
  - cd $CI_PROJECT_NAME
  - git reset --hard $CI_COMMIT_SHA
  # Bump and commit the new version
  - ./scripts/version-control.sh $TYPE
  - VERSION=$(cat ./version)
  # Release the project tag
  - export GIT_TAG_MESSAGE="IMAGE_TAGGED_VERSION-$VERSION"
  - git tag -a $VERSION-internal -m $GIT_TAG_MESSAGE
  # Push the commit tag to gitlab
  - git push --follow-tags origin master
  - git add .
  - git commit -m "Release****$GIT_TAG_MESSAGE[skip ci]"
  - git push origin master
  when: manual
  only:
  - cicd

release:patch:
  extends: .release
  variables:
    TYPE: patch

release:minor:
  extends: .release
  variables:
    TYPE: minor

release:major:
  extends: .release
  variables:
    TYPE: major


.k8s-dashboard-template:
  image: docker-registry.zooz.co:4567/payu-clan-sre/monitoring-projects/tools/hub-euler-executer/releases:1.0.19
  before_script:
    - echo "override before_script"
  script:
    - EULER_DEFINITION=$PWD/dashboards/redis-operator.json FOLDER=$DASHBOARD_FOLDER_NAME DISABLE_DEFAULT_ADDITIONAL_FILTERS=true build-dashboards
    - EULER_DEFINITION=$PWD/dashboards/redis-cluster.json FOLDER=$DASHBOARD_FOLDER_NAME DISABLE_DEFAULT_ADDITIONAL_FILTERS=true build-dashboards
  when: manual

publish-dashboards-dev:
  stage: deploy-dev
  extends: .k8s-dashboard-template
  variables:
    ENV: eks-maps-apps
  tags:
    - eks-mars-apps-apps

publish-dashboards-prd-apps:
  stage: deploy-prd-apps
  extends: .k8s-dashboard-template
  variables:
    ENV: eks-prd-apps
  tags:
    - eks-prd-apps-apps
  only:
    - tags
